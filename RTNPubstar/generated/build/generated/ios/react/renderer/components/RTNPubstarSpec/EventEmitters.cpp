
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include <react/renderer/components/RTNPubstarSpec/EventEmitters.h>


namespace facebook::react {

void PubstarAdViewEventEmitter::onLoaded(OnLoaded event) const {
  dispatchEvent("loaded", [](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    
    return payload;
  });
}


void PubstarAdViewEventEmitter::onLoadedError(OnLoadedError event) const {
  dispatchEvent("loadedError", [event=std::move(event)](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    payload.setProperty(runtime, "name", event.name);
payload.setProperty(runtime, "code", event.code);
    return payload;
  });
}


void PubstarAdViewEventEmitter::onShowed(OnShowed event) const {
  dispatchEvent("showed", [](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    
    return payload;
  });
}


void PubstarAdViewEventEmitter::onHide(OnHide event) const {
  dispatchEvent("hide", [event=std::move(event)](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    payload.setProperty(runtime, "type", event.type);
payload.setProperty(runtime, "amount", event.amount);
    return payload;
  });
}


void PubstarAdViewEventEmitter::onShowedError(OnShowedError event) const {
  dispatchEvent("showedError", [event=std::move(event)](jsi::Runtime &runtime) {
    auto payload = jsi::Object(runtime);
    payload.setProperty(runtime, "name", event.name);
payload.setProperty(runtime, "code", event.code);
    return payload;
  });
}

} // namespace facebook::react
